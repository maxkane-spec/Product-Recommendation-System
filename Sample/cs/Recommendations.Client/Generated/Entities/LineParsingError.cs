// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Recommendations.Client.Entities
{
    using System.Linq;

    /// <summary>
    /// A line parsing error information
    /// </summary>
    public partial class LineParsingError
    {
        /// <summary>
        /// Initializes a new instance of the LineParsingError class.
        /// </summary>
        public LineParsingError() { }

        /// <summary>
        /// Initializes a new instance of the LineParsingError class.
        /// </summary>
        /// <param name="count">Gets the error count</param>
        /// <param name="error">Gets the parsing error reason. Possible values
        /// include: 'MalformedLine', 'MissingFields', 'BadTimestampFormat',
        /// 'BadWeightFormat', 'MalformedCatalogItemFeature',
        /// 'ItemIdTooLong', 'IllegalCharactersInItemId', 'UserIdTooLong',
        /// 'IllegalCharactersInUserId', 'UnknownItemId',
        /// 'DuplicateItemId'</param>
        /// <param name="sample">Gets the parsing error sample</param>
        public LineParsingError(int? count = default(int?), Error? error = default(Error?), ParsingErrorSample sample = default(ParsingErrorSample))
        {
            Count = count;
            Error = error;
            Sample = sample;
        }

        /// <summary>
        /// Gets the error count
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// Gets the parsing error reason. Possible values include:
        /// 'MalformedLine', 'MissingFields', 'BadTimestampFormat',
        /// 'BadWeightFormat', 'MalformedCatalogItemFeature',
        /// 'ItemIdTooLong', 'IllegalCharactersInItemId', 'UserIdTooLong',
        /// 'IllegalCharactersInUserId', 'UnknownItemId', 'DuplicateItemId'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "error")]
        public Error? Error { get; set; }

        /// <summary>
        /// Gets the parsing error sample
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sample")]
        public ParsingErrorSample Sample { get; set; }

    }
}
